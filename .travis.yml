notifications:
  email: false
git:
  quiet: true
  depth: false
language: node_js
node_js: lts/*
python: 3.8
os: linux
arch: amd64
services:
  - xvfb
  - docker
addons:
  apt:
    update: true
    packages:
      - jq
      - bash
      - curl
      - tree
      - httpie
      - docker-ce
      - libappindicator1
      - fonts-liberation
      - google-chrome-stable
      - xvfb
      - libnss3
      - libxss1
      - libasound2
      - libgtk-3-dev
      - libgconf-2-4
      - libnotify-dev
install: true
before_install:
  - export CHROME_BIN=/usr/bin/google-chrome
  - export DISPLAY=:99.0
  #
  - |
    if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
      mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
      curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
    fi
    source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  - stop_any 80 5432 8080 8081 8082 8083 8084 8085 8086 8087 8088 3000
  - docker-compose version
  - http --version --debug
jobs:
  include:
    - stage: test
      name: cypress-testing
      script:
        - cd $TRAVIS_BUILD_DIR/cypress-testing
        #- export CI=1
        - npm i
        - npm run cypress-install
          # see: https://docs.cypress.io/guides/guides/continuous-integration.html#Advanced-setup
        - npm run cypress-run
        #
        - docker pull cypress/included:3.2.0
        - docker run -it -v $(pwd):/e2e -w /e2e -e CI=1 --entrypoint cypress cypress/included:3.2.0 run
        #
        - docker pull cypress/browsers:node8.9.3-chrome73
        - docker run -it -v $(pwd):/e2e -w /e2e -e CI=1 cypress/browsers:node8.9.3-chrome73 bash -c 'npm i ; npm i cypress ; $(npm bin)/cypress run --browser chrome'
        #
        - docker pull cypress/browsers:node8.9.3-chrome73
        - docker run -it -v $(pwd):/e2e -w /e2e -e CI=1 cypress/browsers:node8.9.3-chrome73 bash -c 'npm i ; npm run cypress-install ; npm run cypress-run -- --browser chrome'
    - stage: test
      name: composing-software
      script:
        - cd $TRAVIS_BUILD_DIR/composing-software && npm i
        - cd $TRAVIS_BUILD_DIR/composing-software && npm t
    - stage: test
      name: karma-parcel-starter
      script:
        - cd $TRAVIS_BUILD_DIR/karma-parcel-starter && npm i
        - cd $TRAVIS_BUILD_DIR/karma-parcel-starter && npm t
    - stage: test
      name: first-blood
      script:
        - cd $TRAVIS_BUILD_DIR/first-blood && npm i
        - cd $TRAVIS_BUILD_DIR/first-blood && npm run predeploy
    - stage: deploy
      name: Github pages
      before_deploy:
        - cd $TRAVIS_BUILD_DIR/first-blood && npm i -E
        - cd $TRAVIS_BUILD_DIR/first-blood && npm run predeploy
      script: skip
      env:
        - TERM=dumb
        # travis encrypt GITHUB_TOKEN=<your github repo token> --add
        - secure: WoldedqeTGkuSxO/9KyM5vU7BRAb6ALrq0bjY225aSOtJ32p1VhOrCnqK9eyGF+g/nyOP++zvq6k1dLXwCRddc3TkK9IUb9DN56h3pcDl8EYuihc33h6URXooqNC12VtBEn0qF07UYa3cIWaRM4XRMxWt/CsivNp1DH+crf1UeCAx7+RQeubwXpopeD/qfb3Saa+fEaK4ZLfpMULPctfeoFxckSE03fQgD3H5zZiQ53l7niInjc8Czxaky3EM+E/q6MQiBuKEh3q98tOgEtggKa6eV721bnnIfA3aggc7ha4DUJDToRFcQuyA+6t9jWWZFpQUZn3Q4k0VRmr0coSGXPFxHZCsqKfnO0bW1GOhX0AmxI3K8lXjLq7e6/FhRjWGdJmHBCJsViQ+CYH8aw9GRy2Ydn8+EQ6anigphtx58B15NGFVyyFiQA8Fu+87sBaXBzJeTHZen8Z3mNFJsFgMRSLL15jDrB53IWjvuwr2beFWjZEngIbDaMZTB8yY2xeZ+pnVLDtbMKFIg8M/7xWr0ZoQZFqQft4VPhzr5A/n5ThX4+2YJ1ASbJS1XxnlIqjbswDKKYXwgajAw9lHqtL+FcmWZ8N5fiRTfoH6T95flD0R6+XH7ei2ZF3G6S9co+fuAj8SYLrLK+9Cin79NhG2PoHvZ5jDz2Pkpy3VIFCXMg=
      deploy:
        on:
          branch: master
        provider: pages
        skip-cleanup: true
        keep-history: true
        target_branch: gh-pages
        github-token: "$GITHUB_TOKEN"
        # travis encrypt GITHUB_TOKEN=<your github repo token> --add
        local-dir: $TRAVIS_BUILD_DIR/first-blood/dist
cache:
  npm: true
  packages: true
  directories:
    - composing-software/node_modules
    - karma-parcel-starter/node_modules
    - first-blood/node_modules
    - ~/.local/daggerok
    - ~/.docker
    - ~/.n*
